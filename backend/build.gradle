group 'nl.tudelft.thefirstorder'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}
apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version '0.1'

repositories {
    mavenCentral()
}

dependencies {
    compile("org.apache.logging.log4j:log4j-api:2.5")
    compile("org.apache.logging.log4j:log4j-core:2.5")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.thymeleaf:thymeleaf-spring4")
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    runtime("mysql:mysql-connector-java")
    runtime("org.hsqldb:hsqldb")

    testCompile("junit:junit:4.11")
    testCompile("org.mockito:mockito-core:2.0.48-beta")
}

mainClassName = "nl.tudelft.thefirstorder.spring.Application"

sourceSets {
    main {
        java.srcDir('src/main/java')
        resources.srcDir('src/main/resources')
    }
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

checkstyle {
    toolVersion = '6.17'
    sourceSets = [sourceSets.main]
    showViolations = true
    ignoreFailures = true
    configFile = rootProject.file("config/checkstyle/checkstyle.xml")
    reportsDir = rootProject.file("build/reports/checkstyle")
}

pmd {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = rootProject.file("build/reports/pmd/")
}

findbugs {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = rootProject.file("build/reports/findbugs")
    reportLevel = "low"
    effort = "max"
}

jacoco {
    reportsDir = rootProject.file("build/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination rootProject.file("build/reports/jacoco")
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}


tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
        html.destination rootProject.file("build/reports/findbugs/findbugs.html")
    }
}

